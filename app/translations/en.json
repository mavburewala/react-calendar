[
  {
    "id": "app.components.LocaleToggle.de",
    "defaultMessage": "de",
    "message": ""
  },
  {
    "id": "app.components.LocaleToggle.en",
    "defaultMessage": "en",
    "message": ""
  },
  {
    "id": "react.calendar.components.Footer.author.message",
    "defaultMessage": "Made with love by {author}.",
    "message": "Made with love by {author}."
  },
  {
    "id": "react.calendar.components.Footer.license.message",
    "defaultMessage": "This project is licensed under the MIT license.",
    "message": "This project is licensed under the MIT license."
  },
  {
    "id": "react.calendar.containers.FeaturePage.css.header",
    "defaultMessage": "Features",
    "message": "Next generation CSS"
  },
  {
    "id": "react.calendar.containers.FeaturePage.css.message",
    "defaultMessage": "Next generation CSS",
    "message": "Write composable CSS that's co-located with your components for\n                complete modularity. Unique generated class names keep the\n                specificity low while eliminating style clashes. Ship only the\n                styles that are on the page for the best performance."
  },
  {
    "id": "react.calendar.containers.FeaturePage.feedback.header",
    "defaultMessage": "Instant feedback",
    "message": "Instant feedback"
  },
  {
    "id": "react.calendar.containers.FeaturePage.feedback.message",
    "defaultMessage": "Enjoy the best DX and code your app at the speed of thought! Your\n    saved changes to the CSS and JS are reflected instantaneously\n    without refreshing the page. Preserve application state even when\n    you update something in the underlying code!",
    "message": "Enjoy the best DX and code your app at the speed of thought! Your\n                saved changes to the CSS and JS are reflected instantaneously\n                without refreshing the page. Preserve application state even when\n                you update something in the underlying code!"
  },
  {
    "id": "react.calendar.containers.FeaturePage.header",
    "defaultMessage": "Features",
    "message": ""
  },
  {
    "id": "react.calendar.containers.FeaturePage.home",
    "defaultMessage": "Home",
    "message": "Home"
  },
  {
    "id": "react.calendar.containers.FeaturePage.internationalization.header",
    "defaultMessage": "Complete i18n Standard Internationalization & Pluralization",
    "message": "Complete i18n Standard Internationalization & Pluralization"
  },
  {
    "id": "react.calendar.containers.FeaturePage.internationalization.message",
    "defaultMessage": "Scalable apps need to support multiple languages, easily add and support multiple languages with `react-intl`.",
    "message": "Scalable apps need to support multiple languages, easily add and support multiple languages with `react-intl`."
  },
  {
    "id": "react.calendar.containers.FeaturePage.javascript.header",
    "defaultMessage": "Next generation JavaScript",
    "message": "Next generation JavaScript"
  },
  {
    "id": "react.calendar.containers.FeaturePage.javascript.message",
    "defaultMessage": "Use template strings, object destructuring, arrow functions, JSX\n    syntax and more, today.",
    "message": "Use template strings, object destructuring, arrow functions, JSX\n                syntax and more, today."
  },
  {
    "id": "react.calendar.containers.FeaturePage.network.header",
    "defaultMessage": "Offline-first",
    "message": "Offline-first"
  },
  {
    "id": "react.calendar.containers.FeaturePage.network.message",
    "defaultMessage": "The next frontier in performant web apps: availability without a\n      network connection from the instant your users load the app.",
    "message": "The next frontier in performant web apps: availability without a\n                  network connection from the instant your users load the app."
  },
  {
    "id": "react.calendar.containers.FeaturePage.routing.header",
    "defaultMessage": "Industry-standard routing",
    "message": "Industry-standard routing"
  },
  {
    "id": "react.calendar.containers.FeaturePage.routing.message",
    "defaultMessage": "Write composable CSS that's co-located with your components for\n    complete modularity. Unique generated class names keep the\n    specificity low while eliminating style clashes. Ship only the\n    styles that are on the page for the best performance.",
    "message": "It's natural to want to add pages (e.g. '/about') to your\n                application, and routing makes this possible."
  },
  {
    "id": "react.calendar.containers.FeaturePage.scaffolding.header",
    "defaultMessage": "Quick scaffolding",
    "message": "Quick scaffolding"
  },
  {
    "id": "react.calendar.containers.FeaturePage.scaffolding.message",
    "defaultMessage": "Automate the creation of components, containers, routes, selectors\n  and sagas - and their tests - right from the CLI!",
    "message": "Automate the creation of components, containers, routes, selectors\n                and sagas - and their tests - right from the CLI!"
  },
  {
    "id": "react.calendar.containers.FeaturePage.state_management.header",
    "defaultMessage": "Predictable state management",
    "message": "Predictable state management"
  },
  {
    "id": "react.calendar.containers.FeaturePage.state_management.message",
    "defaultMessage": "Unidirectional data flow allows for change logging and time travel\n    debugging.",
    "message": "Unidirectional data flow allows for change logging and time travel\n                debugging."
  },
  {
    "id": "react.calendar.containers.HomePage.features.Button",
    "defaultMessage": "Features",
    "message": "Features"
  },
  {
    "id": "react.calendar.containers.HomePage.start_project.header",
    "defaultMessage": "React Calendar",
    "message": "React Calendar"
  },
  {
    "id": "react.calendar.containers.HomePage.start_project.message",
    "defaultMessage": "Built Using React.Js",
    "message": "Built Using React.Js"
  },
  {
    "id": "react.calendar.containers.HomePage.tryme.atPrefix",
    "defaultMessage": "@",
    "message": "@"
  },
  {
    "id": "react.calendar.containers.HomePage.tryme.header",
    "defaultMessage": "Try me!",
    "message": "Try me!"
  },
  {
    "id": "react.calendar.containers.HomePage.tryme.message",
    "defaultMessage": "Show Github repositories by",
    "message": "Show Github repositories by"
  },
  {
    "id": "react.calendar.containers.NotFoundPage.header",
    "defaultMessage": "Page not found.",
    "message": "Page not found."
  },
  {
    "id": "react.calendar.containers.NotFoundPage.home",
    "defaultMessage": "Home",
    "message": "Home"
  }
]
